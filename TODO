Things to be addressed, at some point. Unsorted, unprioritized, incomplete.

o x86 support
 - interrupt remapping support
 - PCI resource access control
  - enable bus scans, masking out devices of other cells
  - config space
 - AMD (SVM)?
o ARM support
o configuration
 - add official support to assign resources to multiple cells
   (shared pages, read-only PIO ports)
 - review of format, rework of textual representation
 - platform device assignment
 - create base configuration from knowledge base and running system
o setup validation
 - check integrity of configurations
 - check integrity of runtime environment (hypervisor core & page_pool,
   probably just excluding volatile Linux-related state variables)
  - pure software solution (without security requirements)
  - Intel TXT support?
  - secure boot?
o inter-cell communication channel
 - shared memory + doorbell IRQs
 - queues + doorbell?
o testing
 - build tests for x86 and ARM
 - unit tests?
 - system tests, also in QEMU/KVM
  - VT-d emulation for QEMU?
o inmates
 - reusable runtime environment for cell inmates
 - port free small-footprint RTOS to Jailhouse bare-metal environment?
   candidates could be: RTEMS, eCos, FreeRTOS
o hardware error handling
 - MCEs
 - PCI AER
 - ...
o monitoring
 - report error-triggering devices behind IOMMUs via sysfs
 - hypervisor console via debugfs?
